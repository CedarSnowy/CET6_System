# Generated by Django 4.2.1 on 2023-06-03 12:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("Exam_Manage", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ObjectiveAnswers",
            fields=[
                (
                    "examinee",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="Exam_Manage.examinee",
                    ),
                ),
                ("answer", models.CharField(blank=True, max_length=1, null=True)),
                ("score", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "objective_answers",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ObjectiveQuestions",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("question", models.CharField(blank=True, max_length=1000, null=True)),
                ("option_a", models.CharField(blank=True, max_length=500, null=True)),
                ("option_b", models.CharField(blank=True, max_length=500, null=True)),
                ("option_c", models.CharField(blank=True, max_length=500, null=True)),
                ("option_d", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "answer_option",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                ("score", models.FloatField(blank=True, null=True)),
                ("create_time", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "objective_questions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PaperQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_type", models.CharField(max_length=10)),
            ],
            options={
                "db_table": "paper_question",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Papers",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("paper_name", models.CharField(blank=True, max_length=100, null=True)),
                ("total_score", models.FloatField()),
                ("create_time", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "papers",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SubjectiveAnswers",
            fields=[
                (
                    "examinee",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="Exam_Manage.examinee",
                    ),
                ),
                ("answer", models.CharField(blank=True, max_length=1000, null=True)),
                ("score", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "subjective_answers",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SubjectiveQuestions",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("question", models.CharField(blank=True, max_length=1000, null=True)),
                ("answer", models.CharField(blank=True, max_length=1000, null=True)),
                ("score", models.FloatField(blank=True, null=True)),
                ("create_time", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "subjective_questions",
                "managed": False,
            },
        ),
    ]
